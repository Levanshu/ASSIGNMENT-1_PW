  -- 1  Identify the primary keys and foreign keys in maven movies db. Discuss the differences 
  
-- A primary key is used to ensure that data in the specific column is unique. A column cannot have NULL values.
-- It is either an existing table column or a column that is specifically generated by the database according to a defined sequence. 
-- A foreign key is a column or group of columns in a relational database table that provides a link between data in two tables. It is a column 
-- (or columns) that references a column (most often the primary key) of another table.  

-- IN EVERY TABLE THERE IS HAVING A BOTH PRIMARY KEY AND FOREIGN KEY AS WELL SUCH AS-
-- IN TABLE ACTOR;
-- ACTOR_ID IS PRIMARY KEY AND LAST_NAME IS FOREIGN KEY.

-- IN TABLE ACTOR_AWARD;
-- ACTOR_AWARD_ID IS PRIMARY KEY AND LAST_NAME IS FOREIGN KEY.

-- IN TABLE ADDRESS;
-- ADDRESS_ID IS PRIMARY KEY AND CITY_ID IS FOREIGN KEY.

-- IN TABLE ADVISOR;
-- ADVISOR_ID IS PRIMARY KEY AND NO FOREIGN KEY.

-- IN EVERY TABLE HAVING SAME THING ,THE ONLY THING TO INDENTIFY THESE KEY IS WHEN WE OPEN ANY TABLE IN WROKBENCH THERE IS A BOX OF 
-- OBJECT INFORMATION SO ALL THING IS WRITTEN THERE.

-- ONE MORE THING TO REMEMBER THAT FOR EVERY TABLE PRIMARY KEY IS ONLY ONE BUT FOREIGN CAN BE MORE THAN ONE.
-- SUCH AS
-- IN TABLE PAYMENT;
-- PAYMENT_ID IS PRIMARY KEY AND CUSTOMER_ID,STAFF_ID,RENTAL_ID IS FOREIGN KEY.

-- 2 List all details of actors 
SELECT* FROM ACTOR;

-- 3 List all customer information from DB. 
SELECT* FROM CUSTOMER;

-- 4 List different countries. 
SELECT COUNTRY FROM COUNTRY;

-- 5 Display all active customers. 
SELECT* FROM CUSTOMER WHERE ACTIVE=1;

-- 6 List of all rental IDs for customer with ID 1. 
SELECT CUSTOMER_ID,RENTAL_ID FROM RENTAL WHERE CUSTOMER_ID=1;

-- 7 Display all the films whose rental duration is greater than 5 . 
SELECT* FROM FILM WHERE RENTAL_DURATION >5;

-- 8 List the total number of films whose replacement cost is greater than $15 and less than $20. 
SELECT COUNT(*) AS TOTALFILM FROM FILM WHERE REPLACEMENT_COST > 15 AND REPLACEMENT_COST < 20;

-- 9 Find the number of films whose rental rate is less than $1. 
SELECT COUNT(*) AS NUMBEROF_FILM FROM FILM WHERE RENTAL_RATE <1;

-- 10 Display the count of unique first names of actors. 
SELECT COUNT(distinct FIRST_NAME) AS FIRSTNAME FROM ACTOR;

-- 11 Display the first 10 records from the customer table .
SELECT* FROM CUSTOMER LIMIT 10;

-- 12 Display the first 3 records from the customer table whose first name starts with ‘b’. 
SELECT FIRST_NAME FROM CUSTOMER where FIRST_NAME like "b%" LIMIT 3; 

-- 13 Display the names of the first 5 movies which are rated as ‘G’. 
SELECT TITLE,RATING FROM FILM where RATING='G' LIMIT 5;

-- 14 Find all customers whose first name starts with "a".
SELECT*FROM CUSTOMER WHERE FIRST_NAME LIKE "A%";

-- 15 Find all customers whose first name ends with "a". 
SELECT* FROM CUSTOMER WHERE FIRST_NAME LIKE "%A";

-- 16 Display the list of first 4 cities which start and end with ‘a’ . 
SELECT CITY FROM CITY WHERE CITY LIKE "%A" LIMIT 4;

-- 17 Find all customers whose first name have "NI" in any position. 
SELECT* FROM CUSTOMER WHERE FIRST_NAME LIKE "__NI%";

-- 18 Find all customers whose first name have "r" in the second position .
SELECT* FROM CUSTOMER WHERE FIRST_NAME LIKE "_R%";

-- 19 Find all customers whose first name starts with "a" and are at least 5 characters in length. 
SELECT* FROM CUSTOMER WHERE FIRST_NAME LIKE "A%" AND LENGTH (FIRST_NAME)>=5;

-- 20 Find all customers whose first name starts with "a" and ends with "o". 
SELECT*FROM CUSTOMER where FIRST_NAME LIKE "A%O";

-- 21 Get the films with pg and pg-13 rating using IN operator. 
SELECT*FROM FILM WHERE RATING IN("PG","PG-13");

-- 22 Get the films with length between 50 to 100 using between operator. 
SELECT* FROM FILM WHERE LENGTH BETWEEN 50 AND 100;
 
-- 23 Get the top 50 actors using limit operator. 
SELECT* FROM ACTOR order by ACTOR_ID LIKE 50;

-- 24 Get the distinct film ids from inventory table. 
SELECT distinct FILM_ID FROM INVENTORY;




 

 